#!/bin/sh

set -e

# Source debconf library -- we have a Depends line
# to make sure it is there...
. /usr/share/debconf/confmodule
db_version 2.0

db_get dtc-xen/conf_soap_hostname
conf_soap_hostname=$RET
db_get dtc-xen/conf_soap_port
conf_soap_port=$RET
db_get dtc-xen/conf_soap_login
conf_soap_login=$RET
db_get dtc-xen/conf_soap_pass
conf_soap_pass=$RET

db_unregister dtc-xen/conf_soap_pass
db_stop

VERBOSE_INSTALL=yes

MKTEMP="mktemp -t"
OPENSSL=/usr/bin/openssl
if [ -e "/usr/bin/htpasswd" ] ;then
	HTPASSWD="/usr/bin/htpasswd"
else
	if [ -e "/usr/sbin/htpasswd2" ] ;then
		HTPASSWD="/usr/sbin/htpasswd2"
	else
		echo "Didn't find any htpasswd binary: exiting !!!"
		exit 1;
	fi
fi

DTCXEN_ETCPATH=/etc/dtc-xen

mkdir -p $DTCXEN_ETCPATH
CWD=`pwd`
cd $DTCXEN_ETCPATH

# Check if all the files of the cert are present
TEST=false
if [ ! -e $DTCXEN_ETCPATH/privkey.pem ] ; then
	TEST=true
fi
if [ ! -e $DTCXEN_ETCPATH/dtc-xen.cert.csr ] ; then
	TEST=true
fi
if [ ! -e $DTCXEN_ETCPATH/dtc-xen.cert.cert ] ; then
	 TEST=true
fi
if [ ! -e $DTCXEN_ETCPATH/dtc-xen.cert.key ] ; then
	TEST=true
fi

# Check if we have an old passphrase stored!
if [ -e ${DTCXEN_ETCPATH}/soap.conf ] ; then
	conf_ssl_passphrase=`grep soap_server_pass_phrase /etc/dtc-xen/soap.conf | cut -d"=" -f 2`
	if [ -z ""$conf_ssl_passphrase ] ; then
		echo "Detected empty password: regenerating it!"
		conf_ssl_passphrase=`echo ${RANDOM}${RANDOM}`
	fi
	TEST=false
else
	conf_ssl_passphrase=`echo ${RANDOM}${RANDOM}`
fi

# If one is missing, just regenerate the cert from scratch !
if [ ${TEST} = "true" ] ; then
	# If the config file exist, read the passphrase from the file
	if [ ""$VERBOSE_INSTALL = "yes" ] ;then
		echo "===> Generating SSL certs for the SOAP python server"
	fi
	CERTPASS_TMP_FILE=`${MKTEMP} certfilepass.XXXXXX`  || exit 1
	echo $conf_ssl_passphrase >$CERTPASS_TMP_FILE
	( echo "US"; echo "the-state"; echo "My-ocation"; echo "GPLHost"; echo "No-unit"; echo $conf_soap_hostname;
	echo "webmaster@"$conf_soap_hostname; echo "challenge pass";
	echo $conf_cert_organization; ) | $OPENSSL req -passout file:$CERTPASS_TMP_FILE -new > $DTCXEN_ETCPATH/dtc-xen.cert.csr
	$OPENSSL rsa -passin file:$CERTPASS_TMP_FILE -in $DTCXEN_ETCPATH/privkey.pem -out $DTCXEN_ETCPATH/dtc-xen.cert.key
	$OPENSSL x509 -in $DTCXEN_ETCPATH/dtc-xen.cert.csr -out $DTCXEN_ETCPATH/dtc-xen.cert.cert -req -signkey $DTCXEN_ETCPATH/dtc-xen.cert.key -days 3650
	rm $CERTPASS_TMP_FILE
fi

# Generate the htpasswd file (each time, it doesn't mater)
if [ ""$VERBOSE_INSTALL = "yes" ] ;then
	echo "===> Generating $DTCXEN_ETCPATH/htpasswd file for the SOAP python server"
#	echo "$HTPASSWD -cb $DTCXEN_ETCPATH/htpasswd ${conf_soap_login} ${conf_soap_pass}"
fi
$HTPASSWD -cb $DTCXEN_ETCPATH/htpasswd ${conf_soap_login} ${conf_soap_pass}

# Create the python config file
echo "# This is a generated file, don't edit it, do a dpkg-reconfigure dtc-xen instead!
soap_server_host=${conf_soap_hostname}
soap_server_port=${conf_soap_port}
soap_server_pass_phrase=${conf_ssl_passphrase}
" >${DTCXEN_ETCPATH}/soap.conf

chmod 600 ${DTCXEN_ETCPATH}/*

# Install and start the python SOAP server
if [ -x "/etc/init.d/dtc-xen-soap" ] ; then
	update-rc.d dtc-xen-soap defaults 22 >/dev/null
	if [ -x /usr/sbin/invoke-rc.d ] ; then
		/usr/sbin/invoke-rc.d dtc-xen-soap start
	else
		/etc/init.d/dtc-xen-soap start
	fi
fi

cd $CWD

exit 0;
