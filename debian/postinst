#!/bin/sh

set -e

# Source debconf library -- we have a Depends line
# to make sure it is there...
. /usr/share/debconf/confmodule
db_version 2.0

db_get dtc-xen/conf_soap_hostname
conf_soap_hostname=$RET
db_get dtc-xen/conf_soap_port
conf_soap_port=$RET
db_get dtc-xen/conf_soap_login
conf_soap_login=$RET
db_get dtc-xen/conf_soap_pass
conf_soap_pass=$RET
db_get dtc-xen/conf_node_number
conf_node_number=$RET
db_get dtc-xen/conf_debian_repository
conf_debian_repository=$RET
db_get dtc-xen/conf_netmask
conf_netmask=$RET
db_get dtc-xen/conf_network
conf_network=$RET
db_get dtc-xen/conf_broadcast
conf_broadcast=$RET
db_get dtc-xen/conf_gateway
conf_gateway=$RET
db_get dtc-xen/conf_linux_kernel_name
conf_linux_kernel_name=$RET

db_unregister dtc-xen/conf_soap_pass
db_stop

VERBOSE_INSTALL=yes

MKTEMP="mktemp -t"
OPENSSL=/usr/bin/openssl
if [ -e "/usr/bin/htpasswd" ] ;then
	HTPASSWD="/usr/bin/htpasswd"
else
	if [ -e "/usr/sbin/htpasswd2" ] ;then
		HTPASSWD="/usr/sbin/htpasswd2"
	else
		echo "Didn't find any htpasswd binary: exiting !!!"
		exit 1;
	fi
fi

DTCXEN_ETCPATH=/etc/dtc-xen

mkdir -p $DTCXEN_ETCPATH
CWD=`pwd`
cd $DTCXEN_ETCPATH

# Check if all the files of the cert are present
TEST=false
if [ ! -e $DTCXEN_ETCPATH/privkey.pem ] ; then
	TEST=true
fi
if [ ! -e $DTCXEN_ETCPATH/dtc-xen.cert.csr ] ; then
	TEST=true
fi
if [ ! -e $DTCXEN_ETCPATH/dtc-xen.cert.cert ] ; then
	 TEST=true
fi
if [ ! -e $DTCXEN_ETCPATH/dtc-xen.cert.key ] ; then
	TEST=true
fi

# Check if we have an old passphrase stored!
if [ -e ${DTCXEN_ETCPATH}/soap.conf ] ; then
	conf_ssl_passphrase=`grep soap_server_pass_phrase /etc/dtc-xen/soap.conf | cut -d"=" -f 2`
	if [ -z ""$conf_ssl_passphrase ] ; then
		echo "Detected empty password: regenerating it!"
		conf_ssl_passphrase=`echo ${RANDOM}${RANDOM}`
	fi
	TEST=true
else
	conf_ssl_passphrase=`echo ${RANDOM}${RANDOM}`
fi

# If one is missing, just regenerate the cert from scratch !
if [ ${TEST} = "true" ] ; then
	# If the config file exist, read the passphrase from the file
	if [ ""$VERBOSE_INSTALL = "yes" ] ;then
		echo "===> Generating SSL certs for the SOAP python server"
	fi
	rm -f $DTCXEN_ETCPATH/privkey.pem $DTCXEN_ETCPATH/dtc-xen.cert.csr $DTCXEN_ETCPATH/dtc-xen.cert.cert $DTCXEN_ETCPATH/dtc-xen.cert.key
	CERTPASS_TMP_FILE=`${MKTEMP} certfilepass.XXXXXX`  || exit 1
	echo $conf_ssl_passphrase >$CERTPASS_TMP_FILE
	( echo "US"; echo "the-state"; echo "My-ocation"; echo "GPLHost"; echo "No-unit"; echo $conf_soap_hostname;
	echo "webmaster@"$conf_soap_hostname; echo "challenge pass";
	echo $conf_cert_organization; ) | $OPENSSL req -passout file:$CERTPASS_TMP_FILE -new > $DTCXEN_ETCPATH/dtc-xen.cert.csr
	$OPENSSL rsa -passin file:$CERTPASS_TMP_FILE -in $DTCXEN_ETCPATH/privkey.pem -out $DTCXEN_ETCPATH/dtc-xen.cert.key
	$OPENSSL x509 -in $DTCXEN_ETCPATH/dtc-xen.cert.csr -out $DTCXEN_ETCPATH/dtc-xen.cert.cert -req -signkey $DTCXEN_ETCPATH/dtc-xen.cert.key -days 3650
	rm $CERTPASS_TMP_FILE
fi

# Generate the htpasswd file (each time, it doesn't mater)
if [ ""$VERBOSE_INSTALL = "yes" ] ;then
	echo "===> Generating $DTCXEN_ETCPATH/htpasswd file for the SOAP python server"
#	echo "$HTPASSWD -cb $DTCXEN_ETCPATH/htpasswd ${conf_soap_login} ${conf_soap_pass}"
fi
$HTPASSWD -cb $DTCXEN_ETCPATH/htpasswd ${conf_soap_login} ${conf_soap_pass}

# Create the python config file
echo "# This is a generated file, don't edit it, do a dpkg-reconfigure dtc-xen instead!
soap_server_host=${conf_soap_hostname}
soap_server_port=${conf_soap_port}
soap_server_pass_phrase=${conf_ssl_passphrase}
soap_server_dtcxen_user=${conf_soap_login}
" >${DTCXEN_ETCPATH}/soap.conf

echo "#!/bin/sh
# This is a generated file, don't edit it, do a dpkg-reconfigure dtc-xen instead!

NODE_NUM=$conf_node_number
DEBIAN_REPOS=\"$conf_debian_repository\"
NETMASK=$conf_netmask
NETWORK=$conf_network
BROADCAST=$conf_broadcast
GATEWAY=$conf_gateway

KERNELNAME=$conf_linux_kernel_name

" > ${DTCXEN_ETCPATH}/dtc_create_vps.conf.sh

chmod 600 ${DTCXEN_ETCPATH}/*

# Install and start the python SOAP server
if [ -x "/etc/init.d/dtc-xen-soap" ] ; then
	update-rc.d dtc-xen-soap defaults 22 >/dev/null
	if [ -x /usr/sbin/invoke-rc.d ] ; then
		/usr/sbin/invoke-rc.d dtc-xen-soap start
	else
		/etc/init.d/dtc-xen-soap start
	fi
fi

cd $CWD

# Add the group xenusers
if grep xenusers /etc/group 2>&1 >/dev/null ; then
	echo "Group xenusers already exists in /etc/group"
else
	echo "Add group xenusers"
	groupadd xenusers
fi

# Add the 19th users to /etc/passwd with random password if they don't exist
function dtcaddxenuser {
	if grep ${1} /etc/passwd 2>&1 >/dev/null ; then
		echo "User already exists "${1}
	else
		echo "Adding user "${1}
		useradd -m -g xenusers -p ${RANDOM}${RANDOM} -s /bin/dtc-xen_userconsole.sh ${1}
	fi
}

dtcaddxenuser xen01
dtcaddxenuser xen02
dtcaddxenuser xen03
dtcaddxenuser xen04
dtcaddxenuser xen05
dtcaddxenuser xen06
dtcaddxenuser xen07
dtcaddxenuser xen08
dtcaddxenuser xen09
dtcaddxenuser xen10
dtcaddxenuser xen11
dtcaddxenuser xen12
dtcaddxenuser xen13
dtcaddxenuser xen14
dtcaddxenuser xen15
dtcaddxenuser xen16
dtcaddxenuser xen17
dtcaddxenuser xen18
dtcaddxenuser xen19

# Modify the sudoers file
if grep xenusers /etc/sudoers 2>&1 >/dev/null ; then
	echo "Sudoers already modified"
else
	echo "Adding avaibility of dtc-xen_userconsole.sh to xenusers in /etc/sudoers"
	echo "%xenusers       ALL= NOPASSWD: /usr/sbin/xm console xen*" >>/etc/sudoers
fi

chown root:xenusers /bin/dtc-xen_userconsole.sh
chmod -s /bin/dtc-xen_userconsole.sh

if grep "AllowTcpForwarding no" /etc/ssh/sshd_config ; then
	echo "Port forwarding seems to be disabled already!"
else
	if grep "AllowTcpForwarding" /etc/ssh/sshd_config ; then
		echo "There is a AllowTcpForwarding but not to no: please disable port forwarding NOW!"
	else
		echo "AllowTcpForwarding no" >>/etc/ssh/sshd_config
		echo "Disabling ssh port forwarding for security reasons"
		echo "Please type: \"killall -HUP sshd\" right after this package is setup!!!"
	fi
fi

echo "Installation of dtc-xen has completed, you will need to download centos, and gentoo archives"

if [ ! -e /usr/src/centos3 ]; then
	echo "CentOS 3 archive not found, please issue command (if any download errors, please fix suite):"
	echo "For x86_64:  /usr/bin/rpmstrap --verbose --arch x86_64 --download-only centos3 /usr/src/centos3"
	echo "For i[3456]86: /usr/bin/rpmstrap --verbose --arch i386 --download-only centos3 /usr/src/centos3"
fi

if [ ! -e /usr/src/centos4 ]; then
	echo "CentOS 4 archive not found, please issue command (if any download errors, please fix suite):"
	echo "For x86_64:  /usr/bin/rpmstrap --verbose --arch x86_64 --download-only centos4 /usr/src/centos4"
	echo "For i[3456]86: /usr/bin/rpmstrap --verbose --arch i386 --download-only centos4 /usr/src/centos4"
fi

if [ ! -e /usr/src/gentoo ]; then
	echo "Gentoo archive not found, please issue command: mkdir -p /usr/src/gentoo; cd /usr/src/gentoo; wget http://mirror.gentoo.gr.jp/releases/x86/2006.0/stages/stage3-x86-2006.0.tar.bz2"
fi

exit 0;
